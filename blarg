// The choice to print to the screen or a file is broken and doesn't work:
#include <iostream>
#include <fstream>
#include <string>
using namespace std;

class memberType {
private:
    string firstName;
    string lastName;
    int memberID;
    int booksBought;
    double amountSpent;
    string isbn[50];

public:
    memberType() {
        firstName = "";
        lastName = "";
        memberID = 0;
        booksBought = 0;
        amountSpent = 0.0;
        for (int i = 0; i < 50; i++) {
            isbn[i] = "";
        }
    }
    memberType(string fName, string lName, int ID, int books, double spent, string isbns[]) {
        firstName = fName;
        lastName = lName;
        memberID = ID;
        booksBought = books;
        amountSpent = spent;
        for (int i = 0; i < books; i++) {
            isbn[i] = isbns[i];
        }
        for (int i = books; i < 50; i++) {
            isbn[i] = "";
        }
    }

    friend ostream& operator<< (ostream& os, const memberType& mt) {
        os << mt.firstName << ' ' << mt.lastName << ' ' << mt.memberID << ' ' << mt.booksBought << ' ' << mt.amountSpent << endl;
        for (int i = 0; i < mt.booksBought; i++) {
            os << mt.isbn[i] << endl;
        }
        return os;
    }

    void setFirstName(string fName) {
        firstName = fName;
    }
    void setLastName(string lName) {
        lastName = lName;
    }
    void setMemberID(int ID) {
        memberID = ID;
    }
    void setBooksBought(int books) {
        booksBought = books;
    }
    void setAmountSpent(double spent) {
        amountSpent = spent;
    }
    void setIsbn(string isbns[], int books) {
        for (int i = 0; i < books; i++) {
            isbn[i] = isbns[i];
        }
        for (int i = books; i < 50; i++) {
            isbn[i] = "";
        }
    }
    string getFirstName() const {
        return firstName;
    }
    string getLastName() const {
        return lastName;
    }
    int getMemberID() const {
        return memberID;
    }
    int getBooksBought() const {
        return booksBought;
    }
    double getAmountSpent() const {
        return amountSpent;
    }
    string getIsbn(int index) const {
        return isbn[index];
    }
    void modifyName(string fName, string lName) {
        firstName = fName;
        lastName = lName;
    }
    void modifyBooks(int books) {
        booksBought += books;
    }
    void modifyAmount(double spent) {
        amountSpent += spent;
    }
    void showName() const {
        cout << "Name: " << firstName << " " << lastName << endl;
    }
    void showBooks() const {
        cout << "Number of Books Bought: " << booksBought << endl;
    }
    void showAmount() const {
        cout << "Amount Spent: $" << amountSpent << endl;
    }
    void showIsbn() const {
        cout << "ISBN:" << endl;
        for (int i = 0; i < booksBought; i++) {
            cout << isbn[i] << endl;
        }
    }
};

void printToFile(const memberType members[], int size) {
    ofstream file("output.txt");
    if (file.is_open()) {
        for (int i = 0; i < size; i++) {
            file << members[i];
        }
        file.close();
        cout << "Data written to output.txt" << endl;
    }
    else {
        cout << "Unable to open output file" << endl;
    }
}

void printData(const memberType members[], int size, ostream& os) {
    for (int i = 0; i < size; i++) {
        os << members[i];
    }
}

int main() {
    memberType members[10];

    // Add members
    int i = 0;
    while (i < 10) {
        string firstName, lastName, isbn[50];
        int memberID, books;
        double spent;

        cout << "Enter member #" << (i + 1) << " information:" << endl;
        cout << "First Name: ";
        cin >> firstName;
        cout << "Last Name: ";
        cin >> lastName;
        cout << "Member ID: ";
        cin >> memberID;
        cout << "Number of Books Bought: ";
        cin >> books;
        cout << "Amount Spent: ";
        cin >> spent;
        cout << "ISBN numbers: ";
        for (int j = 0; j < books; j++) {
            cin >> isbn[j];
        }
        members[i] = memberType(firstName, lastName, memberID, books, spent, isbn);

        cout << "Do you want to add another member? (1=yes, 0=no)";
        int continueAdding;
        cin >> continueAdding;
        if (continueAdding == 0) {
            break;
        }
        i++;
    }

    int choice;
    cout << "Choose output option:" << endl;
    cout << "1. Print to screen" << endl;
    cout << "2. Print to file" << endl;
    cin >> choice;

    if (choice == 1) {
        printData(members, 10, cout);
    }
    else if (choice == 2) {
        ofstream file("output.txt");
        if (file.is_open()) {
            printData(members, 10, file);
            file.close();
            cout << "Data written to output.txt" << endl;
        }
        else {
            cout << "Unable to open output file" << endl;
        }
    }
    else {
        cout << "Invalid choice" << endl;
    }

    return 0;
}
